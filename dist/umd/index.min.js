/*! *****************************************************************************
 *
 * simplengrams
 * v3.1.0
 *
 * MIT License
 * 
 * Copyright (C) 2020 Peter Hughes<https://www.phugh.es>, all rights reserved.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 * 
***************************************************************************** */
!function(n,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):(n="undefined"!=typeof globalThis?globalThis:n||self,function(){var e=n.simplengrams,t=n.simplengrams={};r(t),t.noConflict=function(){return n.simplengrams=e,t}}())}(this,(function(n){"use strict";
/**
     * @preserve
     * SimpleNGrams
     * v3.0.0
     *
     * Help me make this better:
     * https://github.com/phugh/simplengrams
     *
     * @name         SimpleNGrams
     * @file         index.js
     * @description  Returns a 2d array of n-grams
     * @version      3.0.0
     * @exports      nGram
     * @author       P. Hughes <peter@phugh.es> (https://www.phugh.es)
     * @copyright    2017-21 P. Hughes. All rights reserved.
     * @license      MIT
     *
     * @example
     *  import { nGram } from 'simplengrams';
     *  const txt = 'A string of text, any text what so ever!';
     *  const bigrams = nGram(txt);
     *  const trigrams = nGram(txt, 3);
     *  console.log(bigrams, trigrams);
     */function r(n,r,e){const t=[];(!0===e||Array.isArray(e))&&(n=function(n,r,e){let t=null,o=null;if(Array.isArray(e))if(2===e.length)t=e[0],o=e[1];else{if(1!==e.length)throw new Error(`Wrong number of elements in pad array. Expected 1 or 2, found ${e.length}.`);t=o=e[0]}let i=n;if(void 0!==t&&(i=new Array(r-1).fill(t).concat(n)),void 0!==o){const n=new Array(r-1).fill(o);i=i.concat(n)}return i}(n,r,e));const o=n.length-r+1;for(let e=0;e<o;e++){const o=[];for(let t=0;t<r;t++)o.push(n[e+r+(t-r)]);t.push(o)}return t}function e(n,e=2,t=!1,o=/\s+/){if(!0===function(n,r,e,t){return Boolean(null!=n&&("string"==typeof n||Array.isArray(n))&&null!=r&&"number"==typeof r&&!Number.isNaN(r)&&null!=e&&("boolean"==typeof e||Array.isArray(e))&&null!=t&&("string"==typeof t||t instanceof RegExp))}(n,e,t,o))return"string"==typeof n&&(n=n.split(o)),e>n.length&&!1===t?[Array.from(n)]:r(n,e,t);throw new SyntaxError("Invalid arguments. Expected nGram(string | string[], number, boolean | string[], string | RegExp)")}n.nGram=e,n.ngram=function(n,r=2,t=!1,o=/\s+/){return e(n,r,t,o)}}));
//# sourceMappingURL=index.min.js.map
